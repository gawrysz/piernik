 $BASE_DOMAIN
    n_d = 8, 16, 448
    nb           = 4
    bnd_xl       = 'per'
    bnd_xr       = 'per'
    bnd_yl       = 'per'
    bnd_yr       = 'per'
    bnd_zl       = 'out'
    bnd_zr       = 'out'
    xmin         =-250.0
    xmax         = 250.0
    ymin         =-500.0
    ymax         = 500.0
    zmin         =-10000.0
    zmax         = 10000.0
 /

 $MPI_BLOCKS
!    psize = 4
 /

 $UNITS
    units_set = "PSM"
 /

 $RESTART_CONTROL
    restart      = 'last'
    nrestart     = 0
    res_id       = ''
 /

 $END_CONTROL
    tend         = 1.2 !500.0
    nend         = 10000000
 /

 $OUTPUT_CONTROL
!    verbosity = 'debug'
    problem_name = 'mcrwind_cresp_tallbox'
    run_id       = 'm02'
    dt_hdf       = 10.0
    dt_res       = 100.0
    dt_log       = 1.0e-2
    dt_tsl       = 1.0e-3
    vars(1:) = 'encr', 'dens', 'magx', 'magy', 'magz', 'velx', 'vely', 'velz', 'cree', 'cren'
    init_res_dump = .true.
 /

 $FLUID_IONIZED
    gamma = 1.66666667
    cs_iso  =  7.0            ! sound speed
 /

 $NUMERICAL_SETUP
    cfl          = 0.3
    smalld       = 1.e-5
    smallei      = 1.e-4
    integration_order = 2
    limiter      = 'vanleer'
    solver_str   = 'riemann'
    cflcontrol   = 'auto'
    DT_INITIAL = 1e-4
  /

 $GRAVITY
    user_grav    = .true.
    gprofs_target= 'extgp'
    r_gc         = 8500     ! Galactic radius of coordinate system
    nsub         = 10
 /

 $RESISTIVITY
    cfl_resist   =    0.9   ! Courant's number for resistivity
    eta_0        =    100.0   ! uniform resistivity
    eta_1        =    0.0   ! anomalous resistivity, works above j_crit
    j_crit       = 1000.0   ! critical value of current
 /

  $COSMIC_RAYS
    ncrb          =   16 ! 23 ! number of cr electron spectrum bins (including cutoff bins)
    cfl_cr        =   0.3
    cr_active     =   1.0
    K_cr_paral    = 8*1.e5 ! CRESP electrons
    K_cr_perp     = 8*1.e3 ! CRESP electrons
    smallecr      = 0.e-2
 /

  $COSMIC_RAY_SPECTRUM
    use_cresp_evol   = .true.   ! enables usage of cresp_update_grid @fluidupdate
    cre_eff     = 0.01 !, 0.1     ! factor scaling sn explosion energy to total spectrum energy
    cfl_cre     = 0.1 !, 0.1
    p_bnd      =  'fix' !'moving' !
    p_min_fix =  1.0e-2! momentum fixed grid
    p_max_fix =  5.0e4 ! momentum fixed grid
    p_lo_init = 8*1.e-3 !, 5.0, 5.0 , 5.0 , 5.0! initial lower cut momentum
    p_up_init = 8*5.e5  !, 8.5e5, 8.5e5 , 8.5e5 , 8.5e5   ! initial upper cut momentum
    p_br_init_lo = 8*1.0e-1 !, 1.0e2, 1.0e2, 1.0e2, 1.0e2
    p_br_init_up = 8*5.0e3!, 5.0e5, 5.0e5, 5.0e5, 5.0e5
    expan_order = 3
    f_init    = 8*5.0e3!, 1.0e-9, 1.0e-9 , 1.0e-9 !       ! < initial value of the normalization parameter in cre energy spectrum
    q_init(:)    = 3*4.1 !, 4.1 ! 3.6   ! < initial value of power law coefficient in cre enrgy spectrum
    q_big     = 20.e0       ! < limit value of power law coefficient in cre energy spectrum, do not set that value too high!
    K_cre_pow(:)    = 8*0.33 !, 0.5 ! 0.5    !
    e_small     = 1.0e-15    ! lower energy cutoff for energy-approximated cutoff momenta
    smallcree = 1.0e-15
    smallcren = 1.0e-15
    initial_spectrum = 'plpc' !'plpc' ! 'powl', 'brpl', 'bump', 'symf', 'syme'
    cre_active(:)  = 8*1.0 !1.0
    NR_iter_limit = 50
    arr_dim_a = 50
    arr_dim_n = 50
    arr_dim_q = 1000
    adiab_active(:)  = 8*.true.
    !adiab_active(2)  = .false.
    synch_active(:)  = 8*.false.
    nullify_empty_bins = .false.
!    NR_smap_file =
/

 $CR_SPECIES
    eE    = .false., .false., .true., .true.
    eH1   = .true., .true., .false., .true.
    eC12  = .true., .false., .true., .true.
    eN14  = .true., .false., .true., .true.
    eO16  = .true., .false., .true., .true.
    eLi7  = .true., .false., .true., .false.
    eBe9  = .true., .false., .true., .false.
    eBe10 = .true., .false., .true., .false.
    eB10  = .true., .false., .true., .false.
    eB11  = .true., .false., .true., .false.
 /

 $SHEARING
    omega        = 0.0      ! angular freq.
    qshear       = 1.0      ! shearing param. q: vy=q*omega*x
 /

 $SN_SOURCES
    r_sn         =  50.0    ! radius of explosion (gauss function)
    h_sn         = 100.0    ! std. dev. for normal distribution of SN i "z" direction
    f_sn_kpc2    = 160.0    ! surface frequency of SN ( / kpc^2 / Myr )
 /

 $PROBLEM_CONTROL
    d0           =  0.025   ! density in galactic plane
    bxn          =  0.0     !
    byn          =  3.0     ! __direction__ of B field
    bzn          =  0.0     !
    x0           =  0.0     ! coordinates of single expl with amplitude
    y0           =  0.0     ! that is set in problem_initial_conditions (testing purpose)
    z0           =  100.0   !
    beta_cr      =  0.0     ! participation of CR in initial equil. (similar to alfa for B)
    amp_cr       =  000 ! amplitude of expl. (problem_initial_conditionslem, x0,y0,z0)
    alpha        =  1.0
 /

 $MULTIGRID_SOLVER
!   stdout = .true.
 /

 $MULTIGRID_DIFFUSION
    diff_explicit = .false.
    diff_theta     = 0.6
    diff_tstep_fac = 100
    norm_tol = 1e-4
    nsmoob = 4
    max_cycles = 20
    diff_bnd_str = "zero"
    overrelax = 1.0 ! dirty trick; optimal value depends at least on diff_tstep_fac
 /

 $MULTIGRID_GRAVITY
 /

 $PIERNIK_DEBUG
   !constant_dt = 0.001
 /

 $INTERACTIONS
 /

 $AMR
 /

 $CRE_TEST
     u_b0     = 0.0 ! 3.0228e-3    ! initial magnetic energy-density
     u_d0     = 0.0 ! 0.25 ! 3.765e-4     ! initial magnitude of div_v
     div_v    = 0.0 ! velocity field divergence, periodic, sums up with u_d0
     ub_ampl  = 0.0   ! amplitude of synchrotron cooling coefficient with time
     omega_d  = 0.157 ! omega_d parameter for test with periodic adiabatic compression: u_d0 = u_d0 + div_v * cos(omega_d * t)
     omega_b  = 0.0   ! omega_b parameter for periodic variation of u_b: u_b = u_b0 + ub_ampl * cos(omega_b * t)
     !dt_ini   = 0.001        ! initial timestep, optional, if absent, initial dt shall be computed. Use value less than dt_max
     !force_dt = .true.      ! < if .true. - dt_ini shall be constant throughout entire simulation

 /

 $PARALLEL_SETUP
    prefer_merged_MPI = T
 /

 $PROFILING
!    use_profiling = T
!    watch_AMR = T
 /

